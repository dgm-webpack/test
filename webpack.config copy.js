const path = require('path');
const OptimizeCssAssetsWebpackPlugin = require('optimize-css-assets-webpack-plugin'); //壓縮css檔
const TerserPlugin = require("terser-webpack-plugin");
const MiniCssExtractPlugin = require('mini-css-extract-plugin');//將css檔放到指定的資料夾
const { CleanWebpackPlugin } = require('clean-webpack-plugin'); //清空dist資料夾
const HtmlWebpackPlugin = require('html-webpack-plugin') //引用資源，輸入及要輸出的檔名
const obj = [
    {   //brands
        js_main: './src/brands/js/main.js',
        img: './src/brands/scss',
        img_publicPath: '../PRE/',
        img_outputPath: 'PRE',
        css_outputPath: 'PRE/[name].css',
        html_template: './src/brands/code/index.html',
        html_filename: 'code/index.html'
    },

]
//
var config = {
    mode: 'development', //development開發；production生產(預設)
    entry: obj[0].js_main, //進入點，引入各種類的檔案，包括圖片或css
    output: { //輸出
        path: path.resolve(__dirname, 'dist'),
        filename: 'js/main.[hash].js',
        // publicPath: '../dist/'
    },
    devServer: {
        contentBase: path.resolve(__dirname, 'dist/'),
        compress: true,
        port: 1234,
        open: true,
        // publicPath : `/dist/`

    },
    resolve: {
        alias: {
            '@img': path.resolve(obj[0].img), //*** */
            '@src': path.resolve(__dirname, 'src/act02/js'),
            '@demoImg': path.resolve(__dirname, 'assets/icon'),
        },
    },
    module: {
        rules: [

            {
                test: /\.s[ac]ss$/i,
                use: [MiniCssExtractPlugin.loader, 'css-loader', 'postcss-loader', 'sass-loader'],
                //css-loader讀取css檔；sass-loader讀取scss檔
                //postcss-loader自動加上劉覽器前綴詞。sass-loader編譯scss檔為css
                //MiniCssExtractPlugin.loader輸出css到指定的資料夾
            },

            {
                test: /\.(png|jpg|jpeg|svg|gif)$/,
                use: [
                    {
                        loader: 'url-loader',
                        options: {
                            name: '[name].[ext]', //經過打包後，輸出的名稱。name是原檔名。ext是副檔名
                            // publicPath: 'http://127.0.0.1:5500/dist/images/', //在輸出的css引用時的路徑，用相對位址
                            publicPath: obj[0].img_publicPath,
                            outputPath: obj[0].img_outputPath, ////輸出的資料夾名稱
                            limit: 1024, //對小於1024B大小的圖片進行base64格式的轉化處理
                            esModule: false, //配合html-withimg-loader，在html內的圖片路徑，不轉換預設路徑，而是照html上寫好的路徑。true该配置项为图片打包后的默认路径，带default对象
                            emitFile: true
                        }
                    },
                    // { //新增的區塊
                    //     loader: 'image-webpack-loader',
                    //     options: { byPassOnDebug: true }
                    // },

                ]
            },
            
            {
                test: /\.html$/i,
                loader: 'html-loader',
              },

        ]
    },
    optimization: {
        minimize: false, //是否壓縮，會影響css和js
        minimizer: [
            new TerserPlugin({
                test: /\.js(\?.*)?$/i,
                terserOptions: {
                    output: {
                        comments: false, //
                    },
                    compress: {
                        warnings: false,
                        drop_console: true,
                        drop_debugger: true
                    },
                },
            }),
            // new OptimizeCssAssetsWebpackPlugin(), //壓縮css檔
        ]
    },
    plugins: [
        new CleanWebpackPlugin(),//清空dist資料夾

        new MiniCssExtractPlugin({
            filename: obj[0].css_outputPath,//將css檔放到指定的資料夾
        }),
        new HtmlWebpackPlugin({ //引用資源，輸入及要輸出的檔名
            template: obj[0].html_template, //*** */
            filename: obj[0].html_filename,
            // minify: false,
            
            inject: 'true', //打包之后的js插入的位置，true/'head'/'body'/false,
            //chunks: ['这里写entry里面你想引用哪些打包的js文件,这文件是个数组']
            minify: {
                minify: false,
                html5: true,
                includeAutoGeneratedTags: false,
                removeComments: true, // 改爲false //刪除HTML註釋
                collapseInlineTagWhitespace: false, //折疊時，請勿在元素之間留任何空間
                collapseWhitespace: false, // 改爲false//折疊有助於文檔樹中文本節點的空白
                preserveLineBreaks: true, //當標籤之間的空格包含換行符時，請務必合攏到1個換行符（永遠不要將其完全刪除）。必須與collapseWhitespace=true
                removeAttributeQuotes: false, // 改爲false//移除空白
                // sortAttributes: true, //按頻率對屬性進行排序
                // sortClassName: true, //按頻率對樣式類進行排序
                // ignoreCustomFragments: [/<\*>/] ,
                // customAttrCollapse: /<\*>/ 
                // more options:
                // https://github.com/kangax/html-minifier#options-quick-reference
              },
            //   ooptions: {
            //   attrs: ['img:src', 'link:href']
            //   }
              //chunksSortMode: 'dependency'
        }),

    ],

}

module.exports = config;



